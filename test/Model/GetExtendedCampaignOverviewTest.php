<?php
/**
 * GetExtendedCampaignOverviewTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Brevo\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Brevo API
 *
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity |
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@brevo.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.68
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Brevo\Client;

use PHPUnit\Framework\TestCase;

/**
 * GetExtendedCampaignOverviewTest Class Doc Comment
 *
 * @category    Class
 * @description GetExtendedCampaignOverview
 * @package     Brevo\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class GetExtendedCampaignOverviewTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "GetExtendedCampaignOverview"
     */
    public function testGetExtendedCampaignOverview()
    {
    }

    /**
     * Test attribute "utmCampaignValue"
     */
    public function testPropertyUtmCampaignValue()
    {
    }

    /**
     * Test attribute "utmSource"
     */
    public function testPropertyUtmSource()
    {
    }

    /**
     * Test attribute "utmMedium"
     */
    public function testPropertyUtmMedium()
    {
    }

    /**
     * Test attribute "utmID"
     */
    public function testPropertyUtmID()
    {
    }

    /**
     * Test attribute "testSent"
     */
    public function testPropertyTestSent()
    {
    }

    /**
     * Test attribute "header"
     */
    public function testPropertyHeader()
    {
    }

    /**
     * Test attribute "footer"
     */
    public function testPropertyFooter()
    {
    }

    /**
     * Test attribute "sender"
     */
    public function testPropertySender()
    {
    }

    /**
     * Test attribute "replyTo"
     */
    public function testPropertyReplyTo()
    {
    }

    /**
     * Test attribute "toField"
     */
    public function testPropertyToField()
    {
    }

    /**
     * Test attribute "htmlContent"
     */
    public function testPropertyHtmlContent()
    {
    }

    /**
     * Test attribute "shareLink"
     */
    public function testPropertyShareLink()
    {
    }

    /**
     * Test attribute "tag"
     */
    public function testPropertyTag()
    {
    }

    /**
     * Test attribute "createdAt"
     */
    public function testPropertyCreatedAt()
    {
    }

    /**
     * Test attribute "modifiedAt"
     */
    public function testPropertyModifiedAt()
    {
    }

    /**
     * Test attribute "inlineImageActivation"
     */
    public function testPropertyInlineImageActivation()
    {
    }

    /**
     * Test attribute "mirrorActive"
     */
    public function testPropertyMirrorActive()
    {
    }

    /**
     * Test attribute "recurring"
     */
    public function testPropertyRecurring()
    {
    }

    /**
     * Test attribute "sentDate"
     */
    public function testPropertySentDate()
    {
    }

    /**
     * Test attribute "returnBounce"
     */
    public function testPropertyReturnBounce()
    {
    }
}
