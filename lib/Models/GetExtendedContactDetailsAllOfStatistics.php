<?php
/**
 * GetExtendedContactDetailsAllOfStatistics
 *
 * PHP version 8.1
 *
 * @package  Brevo\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Brevo API
 *
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity |
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@brevo.com
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Brevo\Client\Models;

use ArrayAccess;
use JsonSerializable;
use InvalidArgumentException;
use ReturnTypeWillChange;
use Brevo\Client\ObjectSerializer;

/**
 * GetExtendedContactDetailsAllOfStatistics Class Doc Comment
 *
 * @description Campaign statistics of the contact
 * @package  Brevo\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements ArrayAccess<string, mixed>
 */
class GetExtendedContactDetailsAllOfStatistics extends AbstractModel
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static string $openAPIModelName = 'getExtendedContactDetails_allOf_statistics';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var array<string, string>
      */
    protected static array $openAPITypes = [
        'messagesSent' => '\Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsMessagesSent[]',
        'hardBounces' => '\Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsMessagesSent[]',
        'softBounces' => '\Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsMessagesSent[]',
        'complaints' => '\Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsMessagesSent[]',
        'unsubscriptions' => '\Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsUnsubscriptions',
        'opened' => '\Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsOpened[]',
        'clicked' => '\Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsClicked[]',
        'transacAttributes' => 'object[]',
        'delivered' => '\Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsMessagesSent[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var array<string, string|null>
      */
    protected static array $openAPIFormats = [
        'messagesSent' => null,
        'hardBounces' => null,
        'softBounces' => null,
        'complaints' => null,
        'unsubscriptions' => null,
        'opened' => null,
        'clicked' => null,
        'transacAttributes' => null,
        'delivered' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var array<string, bool>
      */
    protected static array $openAPINullables = [
        'messagesSent' => false,
        'hardBounces' => false,
        'softBounces' => false,
        'complaints' => false,
        'unsubscriptions' => false,
        'opened' => false,
        'clicked' => false,
        'transacAttributes' => false,
        'delivered' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var array<string, bool>
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var array<string, string>
     */
    protected static array $attributeMap = [
        'messagesSent' => 'messagesSent',
        'hardBounces' => 'hardBounces',
        'softBounces' => 'softBounces',
        'complaints' => 'complaints',
        'unsubscriptions' => 'unsubscriptions',
        'opened' => 'opened',
        'clicked' => 'clicked',
        'transacAttributes' => 'transacAttributes',
        'delivered' => 'delivered'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var array<string, string>
     */
    protected static array $setters = [
        'messagesSent' => 'setMessagesSent',
        'hardBounces' => 'setHardBounces',
        'softBounces' => 'setSoftBounces',
        'complaints' => 'setComplaints',
        'unsubscriptions' => 'setUnsubscriptions',
        'opened' => 'setOpened',
        'clicked' => 'setClicked',
        'transacAttributes' => 'setTransacAttributes',
        'delivered' => 'setDelivered'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var array<string, string>
     */
    protected static array $getters = [
        'messagesSent' => 'getMessagesSent',
        'hardBounces' => 'getHardBounces',
        'softBounces' => 'getSoftBounces',
        'complaints' => 'getComplaints',
        'unsubscriptions' => 'getUnsubscriptions',
        'opened' => 'getOpened',
        'clicked' => 'getClicked',
        'transacAttributes' => 'getTransacAttributes',
        'delivered' => 'getDelivered'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array<string, string>
     */
    public static function attributeMap(): array
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array<string, string>
     */
    public static function setters(): array
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array<string, string>
     */
    public static function getters(): array
    {
        return self::$getters;
    }


    /**
     * Associative array for storing property values
     *
     * @var array
     */
    protected array $container = [];

    /**
     * Constructor
     *
     * @param array $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('messagesSent', $data ?? [], null);
        $this->setIfExists('hardBounces', $data ?? [], null);
        $this->setIfExists('softBounces', $data ?? [], null);
        $this->setIfExists('complaints', $data ?? [], null);
        $this->setIfExists('unsubscriptions', $data ?? [], null);
        $this->setIfExists('opened', $data ?? [], null);
        $this->setIfExists('clicked', $data ?? [], null);
        $this->setIfExists('transacAttributes', $data ?? [], null);
        $this->setIfExists('delivered', $data ?? [], null);
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return string[] invalid properties with reasons
     */
    public function listInvalidProperties(): array
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Gets messagesSent
     *
     * @return \Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsMessagesSent[]|null
     */
    public function getMessagesSent(): ?array
    {
        return $this->container['messagesSent'];
    }

    /**
     * Sets messagesSent
     *
     * @param \Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsMessagesSent[]|null $messagesSent Listing of the sent campaign for the contact
     *
     * @return $this
     */
    public function setMessagesSent(?array $messagesSent): static
    {
        if (is_null($messagesSent)) {
            throw new InvalidArgumentException('non-nullable messagesSent cannot be null');
        }
        $this->container['messagesSent'] = $messagesSent;

        return $this;
    }

    /**
     * Gets hardBounces
     *
     * @return \Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsMessagesSent[]|null
     */
    public function getHardBounces(): ?array
    {
        return $this->container['hardBounces'];
    }

    /**
     * Sets hardBounces
     *
     * @param \Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsMessagesSent[]|null $hardBounces Listing of the hardbounes generated by the contact
     *
     * @return $this
     */
    public function setHardBounces(?array $hardBounces): static
    {
        if (is_null($hardBounces)) {
            throw new InvalidArgumentException('non-nullable hardBounces cannot be null');
        }
        $this->container['hardBounces'] = $hardBounces;

        return $this;
    }

    /**
     * Gets softBounces
     *
     * @return \Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsMessagesSent[]|null
     */
    public function getSoftBounces(): ?array
    {
        return $this->container['softBounces'];
    }

    /**
     * Sets softBounces
     *
     * @param \Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsMessagesSent[]|null $softBounces Listing of the softbounes generated by the contact
     *
     * @return $this
     */
    public function setSoftBounces(?array $softBounces): static
    {
        if (is_null($softBounces)) {
            throw new InvalidArgumentException('non-nullable softBounces cannot be null');
        }
        $this->container['softBounces'] = $softBounces;

        return $this;
    }

    /**
     * Gets complaints
     *
     * @return \Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsMessagesSent[]|null
     */
    public function getComplaints(): ?array
    {
        return $this->container['complaints'];
    }

    /**
     * Sets complaints
     *
     * @param \Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsMessagesSent[]|null $complaints Listing of the complaints generated by the contact
     *
     * @return $this
     */
    public function setComplaints(?array $complaints): static
    {
        if (is_null($complaints)) {
            throw new InvalidArgumentException('non-nullable complaints cannot be null');
        }
        $this->container['complaints'] = $complaints;

        return $this;
    }

    /**
     * Gets unsubscriptions
     *
     * @return \Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsUnsubscriptions|null
     */
    public function getUnsubscriptions(): ?\Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsUnsubscriptions
    {
        return $this->container['unsubscriptions'];
    }

    /**
     * Sets unsubscriptions
     *
     * @param \Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsUnsubscriptions|null $unsubscriptions unsubscriptions
     *
     * @return $this
     */
    public function setUnsubscriptions(?\Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsUnsubscriptions $unsubscriptions): static
    {
        if (is_null($unsubscriptions)) {
            throw new InvalidArgumentException('non-nullable unsubscriptions cannot be null');
        }
        $this->container['unsubscriptions'] = $unsubscriptions;

        return $this;
    }

    /**
     * Gets opened
     *
     * @return \Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsOpened[]|null
     */
    public function getOpened(): ?array
    {
        return $this->container['opened'];
    }

    /**
     * Sets opened
     *
     * @param \Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsOpened[]|null $opened Listing of the openings generated by the contact
     *
     * @return $this
     */
    public function setOpened(?array $opened): static
    {
        if (is_null($opened)) {
            throw new InvalidArgumentException('non-nullable opened cannot be null');
        }
        $this->container['opened'] = $opened;

        return $this;
    }

    /**
     * Gets clicked
     *
     * @return \Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsClicked[]|null
     */
    public function getClicked(): ?array
    {
        return $this->container['clicked'];
    }

    /**
     * Sets clicked
     *
     * @param \Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsClicked[]|null $clicked Listing of the clicks generated by the contact
     *
     * @return $this
     */
    public function setClicked(?array $clicked): static
    {
        if (is_null($clicked)) {
            throw new InvalidArgumentException('non-nullable clicked cannot be null');
        }
        $this->container['clicked'] = $clicked;

        return $this;
    }

    /**
     * Gets transacAttributes
     *
     * @return object[]|null
     */
    public function getTransacAttributes(): ?array
    {
        return $this->container['transacAttributes'];
    }

    /**
     * Sets transacAttributes
     *
     * @param object[]|null $transacAttributes Listing of the transactional attributes for the contact
     *
     * @return $this
     */
    public function setTransacAttributes(?array $transacAttributes): static
    {
        if (is_null($transacAttributes)) {
            throw new InvalidArgumentException('non-nullable transacAttributes cannot be null');
        }
        $this->container['transacAttributes'] = $transacAttributes;

        return $this;
    }

    /**
     * Gets delivered
     *
     * @return \Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsMessagesSent[]|null
     */
    public function getDelivered(): ?array
    {
        return $this->container['delivered'];
    }

    /**
     * Sets delivered
     *
     * @param \Brevo\Client\Models\GetExtendedContactDetailsAllOfStatisticsMessagesSent[]|null $delivered Listing of the delivered campaign for the contact
     *
     * @return $this
     */
    public function setDelivered(?array $delivered): static
    {
        if (is_null($delivered)) {
            throw new InvalidArgumentException('non-nullable delivered cannot be null');
        }
        $this->container['delivered'] = $delivered;

        return $this;
    }
}


