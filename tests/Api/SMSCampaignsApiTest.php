<?php
/**
 * SMSCampaignsApiTest
 * PHP version 8.1
 *
 * @package  Brevo\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Brevo API
 *
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity |
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@brevo.com
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Brevo\Client\Test\Api;

use Brevo\Client\Configuration;
use Brevo\Client\ApiException;
use Brevo\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SMSCampaignsApiTest Class Doc Comment
 *
 * @package  Brevo\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SMSCampaignsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createSmsCampaign
     *
     * Creates an SMS campaign.
     *
     */
    public function testCreateSmsCampaign()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteSmsCampaign
     *
     * Delete an SMS campaign.
     *
     */
    public function testDeleteSmsCampaign()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSmsCampaign
     *
     * Get an SMS campaign.
     *
     */
    public function testGetSmsCampaign()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSmsCampaigns
     *
     * Returns the information for all your created SMS campaigns.
     *
     */
    public function testGetSmsCampaigns()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for requestSmsRecipientExport
     *
     * Export an SMS campaign's recipients.
     *
     */
    public function testRequestSmsRecipientExport()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sendSmsCampaignNow
     *
     * Send your SMS campaign immediately.
     *
     */
    public function testSendSmsCampaignNow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sendSmsReport
     *
     * Send an SMS campaign's report.
     *
     */
    public function testSendSmsReport()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sendTestSms
     *
     * Send a test SMS campaign.
     *
     */
    public function testSendTestSms()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateSmsCampaign
     *
     * Update an SMS campaign.
     *
     */
    public function testUpdateSmsCampaign()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateSmsCampaignStatus
     *
     * Update a campaign's status.
     *
     */
    public function testUpdateSmsCampaignStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
